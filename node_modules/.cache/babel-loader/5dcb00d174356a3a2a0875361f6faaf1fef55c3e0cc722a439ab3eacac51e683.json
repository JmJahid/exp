{"ast":null,"code":"var _jsxFileName = \"/Users/hello/assesment/my-react-project/src/pages/movie-details/movie-details.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport MovieList from '../../statics/movielist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieDetails() {\n  _s();\n  const movieData = MovieList;\n  const {\n    id\n  } = useParams();\n\n  // Convert id to number if needed\n  const movieId = parseInt(id, 10);\n\n  // Retrieve movie details based on movieId\n  // For demonstration, let's use a mock movie data array\n  const movie = movieData.find(movie => movie.id === movieId);\n  if (!movie) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this); // or display a 404 page\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: movie.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 10\n      }, this), \" \", movie.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Cast:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 10\n      }, this), \" \", movie.cast]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 10\n      }, this), \" \", movie.category]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Budget:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 10\n      }, this), \" \", movie.budget]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Release Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 10\n      }, this), \" \", movie.releaseDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieDetails, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useParams","MovieList","jsxDEV","_jsxDEV","MovieDetails","_s","movieData","id","movieId","parseInt","movie","find","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","name","title","cast","category","budget","releaseDate","_c","$RefreshReg$"],"sources":["/Users/hello/assesment/my-react-project/src/pages/movie-details/movie-details.js"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport MovieList from '../../statics/movielist';\n\nfunction MovieDetails() {\n    const movieData = MovieList\n  const { id } = useParams();\n\n  // Convert id to number if needed\n  const movieId = parseInt(id, 10);\n\n  // Retrieve movie details based on movieId\n  // For demonstration, let's use a mock movie data array\n  const movie = movieData.find((movie) => movie.id === movieId);\n\n  if (!movie) {\n    return <div>Loading...</div>; // or display a 404 page\n  }\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <h2>{movie.name}</h2>\n      <p><strong>Title:</strong> {movie.title}</p>\n      <p><strong>Cast:</strong> {movie.cast}</p>\n      <p><strong>Category:</strong> {movie.category}</p>\n      <p><strong>Budget:</strong> {movie.budget}</p>\n      <p><strong>Release Date:</strong> {movie.releaseDate}</p>\n      {/* Add more movie details here if needed */}\n    </div>\n  );\n}\n\nexport default MovieDetails;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,SAAS,GAAGL,SAAS;EAC7B,MAAM;IAAEM;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC;;EAE1B;EACA,MAAMQ,OAAO,GAAGC,QAAQ,CAACF,EAAE,EAAE,EAAE,CAAC;;EAEhC;EACA;EACA,MAAMG,KAAK,GAAGJ,SAAS,CAACK,IAAI,CAAED,KAAK,IAAKA,KAAK,CAACH,EAAE,KAAKC,OAAO,CAAC;EAE7D,IAAI,CAACE,KAAK,EAAE;IACV,oBAAOP,OAAA;MAAAS,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAChC;EAEA,oBACEb,OAAA;IAAKc,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAN,QAAA,gBAC9BT,OAAA;MAAAS,QAAA,EAAKF,KAAK,CAACS;IAAI;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBb,OAAA;MAAAS,QAAA,gBAAGT,OAAA;QAAAS,QAAA,EAAQ;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACN,KAAK,CAACU,KAAK;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5Cb,OAAA;MAAAS,QAAA,gBAAGT,OAAA;QAAAS,QAAA,EAAQ;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACN,KAAK,CAACW,IAAI;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1Cb,OAAA;MAAAS,QAAA,gBAAGT,OAAA;QAAAS,QAAA,EAAQ;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACN,KAAK,CAACY,QAAQ;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClDb,OAAA;MAAAS,QAAA,gBAAGT,OAAA;QAAAS,QAAA,EAAQ;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACN,KAAK,CAACa,MAAM;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9Cb,OAAA;MAAAS,QAAA,gBAAGT,OAAA;QAAAS,QAAA,EAAQ;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACN,KAAK,CAACc,WAAW;IAAA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEtD,CAAC;AAEV;AAACX,EAAA,CA1BQD,YAAY;EAAA,QAEJJ,SAAS;AAAA;AAAAyB,EAAA,GAFjBrB,YAAY;AA4BrB,eAAeA,YAAY;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}