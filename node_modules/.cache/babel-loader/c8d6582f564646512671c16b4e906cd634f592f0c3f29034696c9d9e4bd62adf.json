{"ast":null,"code":"var _jsxFileName = \"/Users/hello/assesment/my-react-project/src/pages/movie-details/movie-details.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport MovieList from '../../statics/movielist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieDetails() {\n  _s();\n  const movieData = MovieList;\n  console.log(movieData);\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  // Convert id to number if needed\n  const movieId = parseInt(id, 10);\n  console.log(movieId);\n  // Retrieve movie details based on movieId\n  // For demonstration, let's use a mock movie data array\n  const movie = movieData.find(movie => movie.id === movieId);\n  console.log(movie);\n  //   if (!movie) {\n  //     return <div>Loading...</div>; // or display a 404 page\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: \"excuse me\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieDetails, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useParams","MovieList","jsxDEV","_jsxDEV","MovieDetails","_s","movieData","console","log","id","movieId","parseInt","movie","find","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hello/assesment/my-react-project/src/pages/movie-details/movie-details.js"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport MovieList from '../../statics/movielist';\n\nfunction MovieDetails() {\n    const movieData = MovieList\n    console.log(movieData)\n  const { id } = useParams();\n    console.log(id)\n  // Convert id to number if needed\n  const movieId = parseInt(id, 10);\n  console.log(movieId)\n  // Retrieve movie details based on movieId\n  // For demonstration, let's use a mock movie data array\n  const movie = movieData.find((movie) => movie.id === movieId);\n  console.log(movie)\n//   if (!movie) {\n//     return <div>Loading...</div>; // or display a 404 page\n//   }\n\n  return (\n    <div style={{ padding: '20px' }}>\n      excuse me\n    </div>\n  );\n}\n\nexport default MovieDetails;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,SAAS,GAAGL,SAAS;EAC3BM,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;EACxB,MAAM;IAAEG;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC;EACxBO,OAAO,CAACC,GAAG,CAACC,EAAE,CAAC;EACjB;EACA,MAAMC,OAAO,GAAGC,QAAQ,CAACF,EAAE,EAAE,EAAE,CAAC;EAChCF,OAAO,CAACC,GAAG,CAACE,OAAO,CAAC;EACpB;EACA;EACA,MAAME,KAAK,GAAGN,SAAS,CAACO,IAAI,CAAED,KAAK,IAAKA,KAAK,CAACH,EAAE,KAAKC,OAAO,CAAC;EAC7DH,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;EACpB;EACA;EACA;;EAEE,oBACET,OAAA;IAAKW,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,EAAC;EAEjC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV;AAACf,EAAA,CArBQD,YAAY;EAAA,QAGJJ,SAAS;AAAA;AAAAqB,EAAA,GAHjBjB,YAAY;AAuBrB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}